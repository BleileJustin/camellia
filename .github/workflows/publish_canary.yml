name: Publish Canary

on:
  push:
    branches:
    - master

jobs:
  build_chrome:
    name: Build (Chromium)
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@master

    - name: Cache dependencies
      id: cache
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Setup Node.js
      uses: actions/setup-node@master
      with:
        node-version: '13.x'

    - name: Install npm dependencies
      run: npm ci

    - name: Build extension
      run: npx webpack
      env:
        APP_ENV: canary
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        GIT_VERSION: ${{ github.sha }}
        BUILD_NUMBER: ${{ github.run_number }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v1
      with:
        name: chrome-canary
        path: dist

  upload_chrome_web_store:
    name: Upload (Chrome Web Store)
    runs-on: ubuntu-latest
    needs: [build_chrome]

    steps:
    - name: Checkout repository
      uses: actions/checkout@master

    - name: Download build artifacts
      uses: actions/download-artifact@v1
      with:
        name: chrome-canary
        path: dist

    - name: Setup Node.js
      uses: actions/setup-node@master
      with:
        node-version: '13.x'

    - name: Install npm dependencies
      run: npm ci

    - name: Upload to Chrome Web Store
      run: npx webstore upload --extension-id $APP_ID --source dist
      env:
        APP_ID: dadaaofggncbhcmekkijnadeffpcblib
        CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
        REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}

    - name: Publish at Chrome Web Store
      run: npx webstore publish --extension-id $APP_ID --trusted-testers
      env:
        APP_ID: dadaaofggncbhcmekkijnadeffpcblib
        CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
        REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}

  sentry_deploy:
    name: Notify Sentry
    runs-on: ubuntu-latest
    needs: [upload_chrome_web_store]

    steps:
    - name: Checkout repository
      uses: actions/checkout@master

    - name: Download build artifacts
      uses: actions/download-artifact@v1
      with:
        name: chrome-canary
        path: dist

    - name: Setup Sentry CLI
      run: curl -sL https://sentry.io/get-cli/ | bash

    - name: Notify Sentry about new release
      run: sentry-cli releases new --project $SENTRY_PROJECT $(sentry-cli releases propose-version)
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

    - name: Assign commits to release
      run: sentry-cli releases set-commits --auto $(sentry-cli releases propose-version)
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

    - name: Upload source maps to Sentry
      run: sentry-cli releases files $(sentry-cli releases propose-version) upload-sourcemaps --ext ts --ext tsx --ext map /dist
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

    - name: Notify Sentry about release deployment
      run: sentry-cli releases deploys $(sentry-cli releases propose-version) new --env canary
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
