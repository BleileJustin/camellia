{"version":3,"sources":["browser-polyfill.js","_variables.js","_functions.js","background.js"],"names":[],"mappingsvfile":"background.js","sourcesContent":["/* @@package_name - v@@version - @@timestamp */\n/* -*- Mode: indent-tabs-mode: nil; js-indent-level: 2 -*- */\n/* vim: set sts=2 sw=2 et tw=80: */\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\"use strict\";\n\nif (typeof browser === \"undefined\") {\n  // Wrapping the bulk of this polyfill in a one-time-use function is a minor\n  // optimization for Firefox. Since Spidermonkey does not fully parse the\n  // contents of a function until the first time it's called, and since it will\n  // never actually need to be called, this allows the polyfill to be included\n  // in Firefox nearly for free.\n  const wrapAPIs = () => {\n    const apiMetadata = {\n  \"alarms\": {\n    \"clear\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 1\n    },\n    \"clearAll\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"get\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 1\n    },\n    \"getAll\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    }\n  },\n  \"bookmarks\": {\n    \"create\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"export\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"get\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getChildren\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getRecent\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getTree\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"getSubTree\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"import\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"move\": {\n      \"minArgs\": 2,\n      \"maxArgs\": 2\n    },\n    \"remove\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"removeTree\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"search\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"update\": {\n      \"minArgs\": 2,\n      \"maxArgs\": 2\n    }\n  },\n  \"browserAction\": {\n    \"getBadgeBackgroundColor\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getBadgeText\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getPopup\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getTitle\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"setIcon\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    }\n  },\n  \"commands\": {\n    \"getAll\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    }\n  },\n  \"contextMenus\": {\n    \"update\": {\n      \"minArgs\": 2,\n      \"maxArgs\": 2\n    },\n    \"remove\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"removeAll\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    }\n  },\n  \"cookies\": {\n    \"get\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getAll\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getAllCookieStores\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"remove\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"set\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    }\n  },\n  \"downloads\": {\n    \"download\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"cancel\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"erase\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getFileIcon\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 2\n    },\n    \"open\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"pause\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"removeFile\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"resume\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"search\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"show\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    }\n  },\n  \"extension\": {\n    \"isAllowedFileSchemeAccess\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"isAllowedIncognitoAccess\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    }\n  },\n  \"history\": {\n    \"addUrl\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getVisits\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"deleteAll\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"deleteRange\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"deleteUrl\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"search\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    }\n  },\n  \"i18n\": {\n    \"detectLanguage\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getAcceptLanguages\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    }\n  },\n  \"idle\": {\n    \"queryState\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    }\n  },\n  \"management\": {\n    \"get\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getAll\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"getSelf\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"uninstallSelf\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 1\n    }\n  },\n  \"notifications\": {\n    \"clear\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"create\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 2\n    },\n    \"getAll\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"getPermissionLevel\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"update\": {\n      \"minArgs\": 2,\n      \"maxArgs\": 2\n    }\n  },\n  \"pageAction\": {\n    \"getPopup\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getTitle\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"hide\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"setIcon\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"show\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    }\n  },\n  \"runtime\": {\n    \"getBackgroundPage\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"getBrowserInfo\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"getPlatformInfo\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"openOptionsPage\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"requestUpdateCheck\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"sendMessage\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 3\n    },\n    \"sendNativeMessage\": {\n      \"minArgs\": 2,\n      \"maxArgs\": 2\n    },\n    \"setUninstallURL\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    }\n  },\n  \"sessions\": {\n\t  \"getRecentlyClosed\": {\n\t\t\"minArgs\": 0,\n\t\t\"maxArgs\": 1\n\t  },\n\t  \"getDevices\": {\n\t\t  \"minArgs\": 0,\n        \"maxArgs\": 1\n\t  },\n\t  \"restore\": {\n\t\t  \"minArgs\": 0,\n        \"maxArgs\": 0\n\t  }\n  },\n  \"storage\": {\n    \"local\": {\n      \"clear\": {\n        \"minArgs\": 0,\n        \"maxArgs\": 0\n      },\n      \"get\": {\n        \"minArgs\": 0,\n        \"maxArgs\": 1\n      },\n      \"getBytesInUse\": {\n        \"minArgs\": 0,\n        \"maxArgs\": 1\n      },\n      \"remove\": {\n        \"minArgs\": 1,\n        \"maxArgs\": 1\n      },\n      \"set\": {\n        \"minArgs\": 1,\n        \"maxArgs\": 1\n      }\n    },\n    \"managed\": {\n      \"get\": {\n        \"minArgs\": 0,\n        \"maxArgs\": 1\n      },\n      \"getBytesInUse\": {\n        \"minArgs\": 0,\n        \"maxArgs\": 1\n      }\n    },\n    \"sync\": {\n      \"clear\": {\n        \"minArgs\": 0,\n        \"maxArgs\": 0\n      },\n      \"get\": {\n        \"minArgs\": 0,\n        \"maxArgs\": 1\n      },\n      \"getBytesInUse\": {\n        \"minArgs\": 0,\n        \"maxArgs\": 1\n      },\n      \"remove\": {\n        \"minArgs\": 1,\n        \"maxArgs\": 1\n      },\n      \"set\": {\n        \"minArgs\": 1,\n        \"maxArgs\": 1\n      }\n    }\n  },\n  \"tabs\": {\n    \"create\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"captureVisibleTab\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 2\n    },\n    \"detectLanguage\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 1\n    },\n    \"duplicate\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"executeScript\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 2\n    },\n    \"get\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getCurrent\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    },\n    \"getZoom\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 1\n    },\n    \"getZoomSettings\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 1\n    },\n    \"highlight\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"insertCSS\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 2\n    },\n    \"move\": {\n      \"minArgs\": 2,\n      \"maxArgs\": 2\n    },\n    \"reload\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 2\n    },\n    \"remove\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"query\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"removeCSS\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 2\n    },\n    \"sendMessage\": {\n      \"minArgs\": 2,\n      \"maxArgs\": 3\n    },\n    \"setZoom\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 2\n    },\n    \"setZoomSettings\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 2\n    },\n    \"update\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 2\n    }\n  },\n  \"topSites\": {\n\t\"get\": {\n\t  \"minArgs\": 0,\n\t  \"maxArgs\": 0\n\t}\n  },\n  \"webNavigation\": {\n    \"getAllFrames\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"getFrame\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    }\n  },\n  \"webRequest\": {\n    \"handlerBehaviorChanged\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 0\n    }\n  },\n  \"windows\": {\n    \"create\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 1\n    },\n    \"get\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 2\n    },\n    \"getAll\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 1\n    },\n    \"getCurrent\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 1\n    },\n    \"getLastFocused\": {\n      \"minArgs\": 0,\n      \"maxArgs\": 1\n    },\n    \"remove\": {\n      \"minArgs\": 1,\n      \"maxArgs\": 1\n    },\n    \"update\": {\n      \"minArgs\": 2,\n      \"maxArgs\": 2\n    }\n  }\n};\n\n    /**\n     * A WeakMap subclass which creates and stores a value for any key which does\n     * not exist when accessed, but behaves exactly as an ordinary WeakMap\n     * otherwise.\n     *\n     * @param {function} createItem\n     *        A function which will be called in order to create the value for any\n     *        key which does not exist, the first time it is accessed. The\n     *        function receives, as its only argument, the key being created.\n     */\n    class DefaultWeakMap extends WeakMap {\n      constructor(createItem, items = undefined) {\n        super(items);\n        this.createItem = createItem;\n      }\n\n      get(key) {\n        if (!this.has(key)) {\n          this.set(key, this.createItem(key));\n        }\n\n        return super.get(key);\n      }\n    }\n\n    /**\n     * Returns true if the given object is an object with a `then` method, and can\n     * therefore be assumed to behave as a Promise.\n     *\n     * @param {*} value The value to test.\n     * @returns {boolean} True if the value is thenable.\n     */\n    const isThenable = value => {\n      return value && typeof value === \"object\" && typeof value.then === \"function\";\n    };\n\n    /**\n     * Creates and returns a function which, when called, will resolve or reject\n     * the given promise based on how it is called:\n     *\n     * - If, when called, `chrome.runtime.lastError` contains a non-null object,\n     *   the promise is rejected with that value.\n     * - If the function is called with exactly one argument, the promise is\n     *   resolved to that value.\n     * - Otherwise, the promise is resolved to an array containing all of the\n     *   function's arguments.\n     *\n     * @param {object} promise\n     *        An object containing the resolution and rejection functions of a\n     *        promise.\n     * @param {function} promise.resolve\n     *        The promise's resolution function.\n     * @param {function} promise.rejection\n     *        The promise's rejection function.\n     *\n     * @returns {function}\n     *        The generated callback function.\n     */\n    const makeCallback = promise => {\n      return (...callbackArgs) => {\n        if (chrome.runtime.lastError) {\n          promise.reject(chrome.runtime.lastError);\n        } else if (callbackArgs.length === 1) {\n          promise.resolve(callbackArgs[0]);\n        } else {\n          promise.resolve(callbackArgs);\n        }\n      };\n    };\n\n    /**\n     * Creates a wrapper function for a method with the given name and metadata.\n     *\n     * @param {string} name\n     *        The name of the method which is being wrapped.\n     * @param {object} metadata\n     *        Metadata about the method being wrapped.\n     * @param {integer} metadata.minArgs\n     *        The minimum number of arguments which must be passed to the\n     *        function. If called with fewer than this number of arguments, the\n     *        wrapper will raise an exception.\n     * @param {integer} metadata.maxArgs\n     *        The maximum number of arguments which may be passed to the\n     *        function. If called with more than this number of arguments, the\n     *        wrapper will raise an exception.\n     *\n     * @returns {function(object, ...*)}\n     *       The generated wrapper function.\n     */\n    const wrapAsyncFunction = (name, metadata) => {\n      const pluralizeArguments = (numArgs) => numArgs == 1 ? \"argument\" : \"arguments\";\n\n      return function asyncFunctionWrapper(target, ...args) {\n        if (args.length < metadata.minArgs) {\n          throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        if (args.length > metadata.maxArgs) {\n          throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        return new Promise((resolve, reject) => {\n          target[name](...args, makeCallback({resolve, reject}));\n        });\n      };\n    };\n\n    /**\n     * Wraps an existing method of the target object, so that calls to it are\n     * intercepted by the given wrapper function. The wrapper function receives,\n     * as its first argument, the original `target` object, followed by each of\n     * the arguments passed to the orginal method.\n     *\n     * @param {object} target\n     *        The original target object that the wrapped method belongs to.\n     * @param {function} method\n     *        The method being wrapped. This is used as the target of the Proxy\n     *        object which is created to wrap the method.\n     * @param {function} wrapper\n     *        The wrapper function which is called in place of a direct invocation\n     *        of the wrapped method.\n     *\n     * @returns {Proxy<function>}\n     *        A Proxy object for the given method, which invokes the given wrapper\n     *        method in its place.\n     */\n    const wrapMethod = (target, method, wrapper) => {\n      return new Proxy(method, {\n        apply(targetMethod, thisObj, args) {\n          return wrapper.call(thisObj, target, ...args);\n        },\n      });\n    };\n\n    let hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    /**\n     * Wraps an object in a Proxy which intercepts and wraps certain methods\n     * based on the given `wrappers` and `metadata` objects.\n     *\n     * @param {object} target\n     *        The target object to wrap.\n     *\n     * @param {object} [wrappers = {}]\n     *        An object tree containing wrapper functions for special cases. Any\n     *        function present in this object tree is called in place of the\n     *        method in the same location in the `target` object tree. These\n     *        wrapper methods are invoked as described in {@see wrapMethod}.\n     *\n     * @param {object} [metadata = {}]\n     *        An object tree containing metadata used to automatically generate\n     *        Promise-based wrapper functions for asynchronous. Any function in\n     *        the `target` object tree which has a corresponding metadata object\n     *        in the same location in the `metadata` tree is replaced with an\n     *        automatically-generated wrapper function, as described in\n     *        {@see wrapAsyncFunction}\n     *\n     * @returns {Proxy<object>}\n     */\n    const wrapObject = (target, wrappers = {}, metadata = {}) => {\n      let cache = Object.create(null);\n\n      let handlers = {\n        has(target, prop) {\n          return prop in target || prop in cache;\n        },\n\n        get(target, prop, receiver) {\n          if (prop in cache) {\n            return cache[prop];\n          }\n\n          if (!(prop in target)) {\n            return undefined;\n          }\n\n          let value = target[prop];\n\n          if (typeof value === \"function\") {\n            // This is a method on the underlying object. Check if we need to do\n            // any wrapping.\n\n            if (typeof wrappers[prop] === \"function\") {\n              // We have a special-case wrapper for this method.\n              value = wrapMethod(target, target[prop], wrappers[prop]);\n            } else if (hasOwnProperty(metadata, prop)) {\n              // This is an async method that we have metadata for. Create a\n              // Promise wrapper for it.\n              let wrapper = wrapAsyncFunction(prop, metadata[prop]);\n              value = wrapMethod(target, target[prop], wrapper);\n            } else {\n              // This is a method that we don't know or care about. Return the\n              // original method, bound to the underlying object.\n              value = value.bind(target);\n            }\n          } else if (typeof value === \"object\" && value !== null &&\n                     (hasOwnProperty(wrappers, prop) ||\n                      hasOwnProperty(metadata, prop))) {\n            // This is an object that we need to do some wrapping for the children\n            // of. Create a sub-object wrapper for it with the appropriate child\n            // metadata.\n            value = wrapObject(value, wrappers[prop], metadata[prop]);\n          } else {\n            // We don't need to do any wrapping for this property,\n            // so just forward all access to the underlying object.\n            Object.defineProperty(cache, prop, {\n              configurable: true,\n              enumerable: true,\n              get() {\n                return target[prop];\n              },\n              set(value) {\n                target[prop] = value;\n              },\n            });\n\n            return value;\n          }\n\n          cache[prop] = value;\n          return value;\n        },\n\n        set(target, prop, value, receiver) {\n          if (prop in cache) {\n            cache[prop] = value;\n          } else {\n            target[prop] = value;\n          }\n          return true;\n        },\n\n        defineProperty(target, prop, desc) {\n          return Reflect.defineProperty(cache, prop, desc);\n        },\n\n        deleteProperty(target, prop) {\n          return Reflect.deleteProperty(cache, prop);\n        },\n      };\n\n      return new Proxy(target, handlers);\n    };\n\n    /**\n     * Creates a set of wrapper functions for an event object, which handles\n     * wrapping of listener functions that those messages are passed.\n     *\n     * A single wrapper is created for each listener function, and stored in a\n     * map. Subsequent calls to `addListener`, `hasListener`, or `removeListener`\n     * retrieve the original wrapper, so that  attempts to remove a\n     * previously-added listener work as expected.\n     *\n     * @param {DefaultWeakMap<function, function>} wrapperMap\n     *        A DefaultWeakMap object which will create the appropriate wrapper\n     *        for a given listener function when one does not exist, and retrieve\n     *        an existing one when it does.\n     *\n     * @returns {object}\n     */\n    const wrapEvent = wrapperMap => ({\n      addListener(target, listener, ...args) {\n        target.addListener(wrapperMap.get(listener), ...args);\n      },\n\n      hasListener(target, listener) {\n        return target.hasListener(wrapperMap.get(listener));\n      },\n\n      removeListener(target, listener) {\n        target.removeListener(wrapperMap.get(listener));\n      },\n    });\n\n    const onMessageWrappers = new DefaultWeakMap(listener => {\n      if (typeof listener !== \"function\") {\n        return listener;\n      }\n\n      /**\n       * Wraps a message listener function so that it may send responses based on\n       * its return value, rather than by returning a sentinel value and calling a\n       * callback. If the listener function returns a Promise, the response is\n       * sent when the promise either resolves or rejects.\n       *\n       * @param {*} message\n       *        The message sent by the other end of the channel.\n       * @param {object} sender\n       *        Details about the sender of the message.\n       * @param {function(*)} sendResponse\n       *        A callback which, when called with an arbitrary argument, sends\n       *        that value as a response.\n       * @returns {boolean}\n       *        True if the wrapped listener returned a Promise, which will later\n       *        yield a response. False otherwise.\n       */\n      return function onMessage(message, sender, sendResponse) {\n        let result = listener(message, sender);\n\n        if (isThenable(result)) {\n          result.then(sendResponse, error => {\n            console.error(error);\n            sendResponse(error);\n          });\n\n          return true;\n        } else if (result !== undefined) {\n          sendResponse(result);\n        }\n      };\n    });\n\n    const staticWrappers = {\n      runtime: {\n        onMessage: wrapEvent(onMessageWrappers),\n      },\n    };\n\n    return wrapObject(chrome, staticWrappers, apiMetadata);\n  };\n\n  this.browser = wrapAPIs();\n}\n","`use strict`;\n\n/**\n * Maximum number of columns.\n */\nconst COLUMN_COUNT = 12;\n\n/**\n * Available column values.\n */\nconst AVAILABLE_COLUMNS = [1, 2, 3, 4, 6, 12];","'use strict';\n\n/**\n  * Chunks array.\n  *\n  * This method splits array into equal chunks\n  * and allows to balance them.\n  *\n  * @since 1.0.0\n  *\n  * @param int  chunksCount How much chunks to create.\n  * @param bool balanced    Balance array.\n  *\n  * @return array Chunked array.\n  */\nArray.prototype.chunk = function(chunksCount, balanced = true) {\n    let self = this;\n\n    if (chunksCount < 2) {\n        return [self];\n    }\n\n    let ret = [];\n    let i = 0;\n    let arraySize = self.length;\n\n    if (arraySize % chunksCount === 0) {\n        let size = Math.floor(arraySize / chunksCount);\n\n        while (i < arraySize) {\n            ret.push(self.slice(i, i += size));\n        }\n\n    } else if (balanced) {\n        while (i < arraySize) {\n            let size = Math.ceil((arraySize - i) / chunksCount--);\n\n            ret.push(self.slice(i, i += size));\n        }\n\n    } else {\n        chunksCount--;\n\n        let size = Math.floor(arraySize / chunksCount);\n\n        if (arraySize % size === 0) {\n            size--;\n        }\n\n        while (i < size * chunksCount) {\n            ret.push(self.slice(i, i += size));\n        }\n\n        ret.push(self.slice(size * chunksCount));\n    }\n\n    return ret;\n}\n\n/**\n  * Flattens recursive arrays.\n  *\n  * This method flattens nested & recursive arrays\n  * into one-level array by recursion key.\n  *\n  * @since 1.0.0\n  *\n  * @param string recursionKey Name of the key used in nesting.\n  *\n  * @return array Flatten array.\n  */\nArray.prototype.flatten = function(recursionKey) {\n    let ret = [];\n\n    this.forEach((item) => {\n        let isFolder = typeof item[recursionKey] === 'object';\n\n        if (isFolder) {\n            ret = ret.concat(item[recursionKey].flatten(recursionKey));\n        } else {\n            ret.push(item);\n        }\n    });\n\n    return ret;\n}\n\n/**\n  * Generates random integer in given range.\n  *\n  * @since 1.0.0\n  *\n  * @param int min Minimal possible value.\n  * @param int max Maximal possible value.\n  *\n  * @return array Random integer.\n  */\nlet getRandomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n  * Highlight word from string in given format.\n  *\n  * @since 1.0.0\n  *\n  * @param string word        Word to search for.\n  * @param string replacement Replacement. For replacement should\n  *                           contain '$1', e.g. '<mark>$1</mark>'.\n  *\n  * @return array String with highlighted word.\n  */\nString.prototype.highlight = function(word, replacement) {\n     let regex = new RegExp('(' + word + ')', 'gi');\n\n     return this.replace(regex, replacement);\n}\n\n/**\n  * Creates object with localizations.\n  *\n  * @since 1.0.0\n  *\n  * @param array messages Array of message names from _locales/.../messages.json.\n  *                       Each array value shound be string or array.\n  *\n  * @return object Contains all passed localizations. Key is string Name\n  *                and value is localized string.\n  */\nlet i18nObject = messages => {\n    let ret = {};\n\n    messages.forEach(message => {\n        if (typeof message === 'string') {\n            ret[message] = browser.i18n.getMessage(message);\n        } else if (Array.isArray(message) === true && message.length > 1) {\n            let messageName = message.shift();\n            ret[messageName] = browser.i18n.getMessage(messageName, message);\n        }\n    });\n\n    return ret;\n}\n\n/**\n  * Escapes some symbols used in HTML to prevent XSS.\n  *\n  * @since 1.0.0\n  *\n  * @return string Escaped string.\n  */\nString.prototype.encodeHTML = function () {\n    return this.replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;');\n};\n\n/**\n  * Rounds number that bigger than 1000.\n  *\n  * @since 1.3.0\n  *\n  * @return string|int Rounded to thousands number.\n  */\nNumber.prototype.roundThousands = function () {\n    return this > 999\n        ? (this / 1000).toFixed(1) + 'k'\n        : this;\n}","/*\n|--------------------------------------------------------------------------\n| Search bookmarks in omnibox\n|--------------------------------------------------------------------------\n|\n| This event is fired each time the user updates the text in the omnibox,\n| as long as the extension's keyword mode is still active.\n*/\n\nbrowser.omnibox.onInputChanged.addListener((text, suggest) => {\n\tPromise.all([\n\t\tbrowser.storage.local.get(),\n\t\tbrowser.storage.sync.get(),\n\t\tbrowser.bookmarks.getTree()\n\t])\n\t.then(([local_storage, sync_storage, browserBookmarks]) => {\n\t\tif (text.length <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet allBookmarks     = browserBookmarks[0]['children'][0]['children'];\n\t\tlet flattedBookmarks = allBookmarks.flatten('children');\n\n\t\tlet filteredBookmarks = flattedBookmarks.filter(item => {\n\t\t\treturn item.title.toLowerCase().indexOf(text.toLowerCase()) !== -1\n\t\t\t\t  || item.url.toLowerCase().indexOf(text.toLowerCase()) !== -1;\n\t\t});\n\n\t\tif (filteredBookmarks.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet sortedBookmarks = filteredBookmarks.sort((a, b) => {\n\t\t\ta.clicks = typeof sync_storage['click_counter'][a.id] !== 'undefined'\n\t\t\t\t\t ? sync_storage['click_counter'][a.id]\n\t\t\t\t\t : 0;\n\n\t\t\tb.clicks = typeof sync_storage['click_counter'][b.id] !== 'undefined'\n\t\t\t\t\t ? sync_storage['click_counter'][b.id]\n\t\t\t\t\t : 0;\n\n\t\t\treturn b.clicks - a.clicks;\n\t\t});\n\n\t\tlet suggestions = [];\n\n\t\tsortedBookmarks.forEach((bookmark, index) => {\n\t\t\tlet title = bookmark.title.encodeHTML();\n\t\t\tlet url = bookmark.url.encodeHTML()\n\t\t\t\t.replace('http://', '')\n\t\t\t\t.replace('https://', '');\n\n\t\t\tif (title.toLowerCase().indexOf(text.toLowerCase()) !== -1) {\n\t\t\t\ttitle = title.highlight(text, '<match>$1</match>');\n\t\t\t}\n\n\t\t\tif (url.toLowerCase().indexOf(text.toLowerCase()) !== -1) {\n\t\t\t\turl = url.highlight(text, '<match>$1</match>');\n\t\t\t}\n\n\t\t\tif (local_storage['display_click_counter'] === true\n\t\t\t&& typeof sync_storage['click_counter'][bookmark.id] !== 'undefined'\n\t\t\t&& sync_storage['click_counter'][bookmark.id] > 0) {\n\t\t\t\ttitle += ' <dim>(' + sync_storage['click_counter'][bookmark.id] + ')</dim>';\n\t\t\t}\n\n\t\t\tsuggestions.push({\n\t\t\t\tcontent: bookmark.id,\n\t\t\t\tdescription: title + ' <dim>—</dim> <url>' + url + '</url>'\n\t\t\t});\n\t\t});\n\n\t\tsuggest(suggestions);\n\t})\n\t.catch(error => {\n\t\tbrowser.notifications.create({\n\t\t\t'type': 'basic',\n\t\t\t'iconUrl': '/img/logo/512x512-colored.png',\n\t\t\t'title': browser.i18n.getMessage('error_occured'),\n\t\t\t'message': error.message\n\t\t});\n\t});\n});\n\n/*\n|--------------------------------------------------------------------------\n| Opens bookmark from omnibox\n|--------------------------------------------------------------------------\n|\n| This event fired when user selects any bookmark from omnibox.\n*/\n\nbrowser.omnibox.onInputEntered.addListener(bookmarkId => {\n\tif (bookmarkId.length === 0\n\t|| Number.isInteger(parseInt(bookmarkId)) === false) {\n\t\treturn;\n\t}\n\n\tPromise.all([\n\t\tbrowser.storage.sync.get(),\n\t\tbrowser.storage.local.get(),\n\t\tbrowser.bookmarks.get(bookmarkId)\n\t])\n\t.then(([sync_storage, local_storage, browserBookmarks]) => {\n\t\tlet bookmark = browserBookmarks[0];\n\n\t\tsync_storage['click_counter'][bookmark.id] = typeof sync_storage['click_counter'][bookmark.id] !== 'undefined'\n\t\t\t? sync_storage['click_counter'][bookmark.id]\n\t\t\t: 0;\n\n\t\tsync_storage['click_counter'][bookmark.id]++;\n\n\t\tbrowser.storage.sync.set(sync_storage);\n\n\t\tif (local_storage['bookmarks_in_new_tab'] === true) {\n\t\t\tbrowser.tabs.create({\n\t\t\t\turl: bookmark.url\n\t\t\t});\n\t\t} else {\n\t\t\tbrowser.tabs.query({active: true, currentWindow: true})\n\t\t\t.then(tabs => {\n\t\t\t\tbrowser.tabs.update(tabs[0].id, {url: bookmark.url});\n\t\t\t});\n\t\t}\n\t\t\n\t})\n\t.catch(error => {\n\t\tbrowser.notifications.create({\n\t\t\t'type': 'basic',\n\t\t\t'iconUrl': '/img/logo/512x512-colored.png',\n\t\t\t'title': browser.i18n.getMessage('error_occured'),\n\t\t\t'message': error.message\n\t\t});\n\t});\n});\n\n/*\n|--------------------------------------------------------------------------\n| Setting up default settings\n|--------------------------------------------------------------------------\n|\n| This settings sets up after each extenstion update and refresh\n| if they`re not set.\n*/\n\nbrowser.runtime.onInstalled.addListener(details => {\n\tPromise.all([\n\t\tbrowser.storage.local.get(),\n\t\tbrowser.storage.sync.get()\n\t])\n\t.then(([local_storage, sync_storage]) => {\n\n\t\t/*\n\t\t|--------------------------------------------------------------------------\n\t\t| Syncronisable default settings\n\t\t|--------------------------------------------------------------------------\n\t\t|\n\t\t| This settings synced between all browsers using one account.\n\t\t*/\n\n\t\t// Sets installation date\n\t\tif (typeof sync_storage['installation_date'] === 'undefined'\n\t\t|| Number.isInteger(sync_storage['installation_date']) === false) {\n\t\t\tsync_storage['installation_date'] = Date.now();\n\t\t}\n\n\t\t// True if beg to rate extenstion as already displayed\n\t\tif (typeof sync_storage['vote_remind_displayed'] === 'undefined'\n\t\t|| typeof sync_storage['vote_remind_displayed'] !== 'boolean') {\n\t\t\tsync_storage['vote_remind_displayed'] = false;\n\t\t}\n\t\t\n\t\t/*\n\t\t|--------------------------------------------------------------------------\n\t\t| Local default settings\n\t\t|--------------------------------------------------------------------------\n\t\t|\n\t\t| This settings may be set individually for each browser.\n\t\t*/\n\n        // Object with bookmark click counter\n        if (typeof local_storage['click_counter'] === 'undefined'\n            || typeof local_storage['click_counter'] !== 'object') {\n            local_storage['click_counter'] = {};\n        }\n\n\t\t// Number of columns\n\t\tif (typeof local_storage['columns_count'] === 'undefined'\n\t\t|| Number.isInteger(local_storage['columns_count']) === false) {\n\t\t\tlocal_storage['columns_count'] = 6;\n\t\t}\n\n\t\t// Use native OS scroll bar or designed pure CSS version\n\t\tif (typeof local_storage['use_custom_scrollbar'] === 'undefined'\n\t\t|| typeof local_storage['use_custom_scrollbar'] !== 'boolean') {\n\t\t\tlocal_storage['use_custom_scrollbar'] = true;\n\t\t}\n\n\t\t// Background wallpaper\n\t\tif (typeof local_storage['background_image'] === 'undefined'\n\t\t|| typeof local_storage['background_image'] !== 'string') {\n\t\t\tlocal_storage['background_image'] = '/img/wallpaper.jpg';\n\t\t}\n\n\t\t// Display number of clicks at each bookmark\n\t\tif (typeof local_storage['display_click_counter'] === 'undefined'\n\t\t|| typeof local_storage['display_click_counter'] !== 'boolean') {\n\t\t\tlocal_storage['display_click_counter'] = true;\n\t\t}\n\n\t\t// Enables and disabled text selecting\n\t\tif (typeof local_storage['user_select'] === 'undefined'\n\t\t|| typeof local_storage['user_select'] !== 'boolean') {\n\t\t\tlocal_storage['user_select'] = true;\n\t\t}\n\n\t\t// Enables and disabled text selecting\n\t\tif (typeof local_storage['font_size'] === 'undefined'\n\t\t|| Number.isInteger(local_storage['font_size']) === false) {\n\t\t\tlocal_storage['font_size'] = 16;\n\t\t}\n\n\t\t// Opens all links in new tab\n\t\tif (typeof local_storage['bookmarks_in_new_tab'] === 'undefined'\n\t\t|| typeof local_storage['bookmarks_in_new_tab'] !== 'boolean') {\n\t\t\tlocal_storage['bookmarks_in_new_tab'] = false;\n\t\t}\n\n\t\t// Display top sites block\n\t\tif (typeof local_storage['top_sites'] === 'undefined'\n\t\t|| typeof local_storage['top_sites'] !== 'boolean') {\n\t\t\tlocal_storage['top_sites'] = false;\n\t\t}\n\n\t\t// Display recently closed tabs\n\t\tif (typeof local_storage['recently_closed'] === 'undefined'\n\t\t|| typeof local_storage['recently_closed'] !== 'boolean') {\n\t\t\tlocal_storage['recently_closed'] = false;\n\t\t}\n\n        // Background brightness\n        if (typeof local_storage['background_brightness'] === 'undefined'\n            || typeof local_storage['background_brightness'] !== 'number') {\n            local_storage['background_brightness'] = 0.2;\n        }\n\t\t\n\t\tbrowser.storage.sync.set(sync_storage);\n\t\tbrowser.storage.local.set(local_storage);\n\t})\n\t.catch(error => {\n\t\tbrowser.notifications.create({\n\t\t\t'type': 'basic',\n\t\t\t'iconUrl': '/img/logo/512x512-colored.png',\n\t\t\t'title': browser.i18n.getMessage('error_occured'),\n\t\t\t'message': error.message\n\t\t});\n\t});\n});\n"]}